@extends('recruiter.layouts.app')

@section('title', 'Interview Calendar')
@section('page-title', 'Interview Calendar')

@section('content')
<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h4>Interview Calendar</h4>
        <p class="text-muted">View your scheduled interviews in calendar format</p>
    </div>
    <a href="{{ route('recruiter.interviews.index') }}" class="btn btn-outline-primary">
        <i class="fas fa-list me-2"></i>List View
    </a>
</div>

<!-- Calendar Navigation -->
<div class="card mb-4">
    <div class="card-body">
        <div class="row align-items-center">
            <div class="col-md-4">
                <div class="btn-group">
                    <button type="button" class="btn btn-outline-primary" onclick="changeMonth(-1)">
                        <i class="fas fa-chevron-left"></i>
                    </button>
                    <button type="button" class="btn btn-outline-primary" onclick="goToToday()">
                        Today
                    </button>
                    <button type="button" class="btn btn-outline-primary" onclick="changeMonth(1)">
                        <i class="fas fa-chevron-right"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-4 text-center">
                <h5 id="current-month" class="mb-0"></h5>
            </div>
            <div class="col-md-4 text-end">
                <div class="d-flex justify-content-end align-items-center">
                    <span class="badge bg-warning me-2">Scheduled</span>
                    <span class="badge bg-success me-2">Completed</span>
                    <span class="badge bg-danger">Cancelled</span>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Calendar -->
<div class="card shadow">
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered calendar-table">
                <thead>
                    <tr>
                        <th class="text-center">Sunday</th>
                        <th class="text-center">Monday</th>
                        <th class="text-center">Tuesday</th>
                        <th class="text-center">Wednesday</th>
                        <th class="text-center">Thursday</th>
                        <th class="text-center">Friday</th>
                        <th class="text-center">Saturday</th>
                    </tr>
                </thead>
                <tbody id="calendar-body">
                    <!-- Calendar will be generated by JavaScript -->
                    <tr>
                        <td colspan="7" class="text-center text-muted">
                            <div class="spinner-border spinner-border-sm me-2" role="status"></div>
                            Loading calendar...
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Upcoming Interviews -->
<div class="card shadow mt-4">
    <div class="card-header">
        <h5 class="mb-0">Upcoming Interviews</h5>
    </div>
    <div class="card-body">
        @if($interviews->count() > 0)
            <div class="row">
                @foreach($interviews->take(6) as $interview)
                <div class="col-md-6 col-lg-4 mb-3">
                    <div class="border rounded p-3">
                        <div class="d-flex justify-content-between align-items-start mb-2">
                            <h6 class="mb-0">{{ $interview->user->name }}</h6>
                            <span class="badge bg-{{ $interview->status === 'scheduled' ? 'warning' : 'success' }}">
                                {{ ucfirst($interview->status) }}
                            </span>
                        </div>
                        <p class="text-muted mb-1">
                            <i class="fas fa-briefcase me-1"></i>{{ $interview->job->title }}
                        </p>
                        <p class="text-muted mb-1">
                            <i class="fas fa-calendar me-1"></i>{{ $interview->interview_date->format('M d, Y') }}
                        </p>
                        <p class="text-muted mb-2">
                            <i class="fas fa-clock me-1"></i>{{ $interview->interview_time->format('H:i A') }}
                        </p>
                        <a href="{{ route('recruiter.interviews.show', $interview) }}" class="btn btn-sm btn-outline-primary">
                            View Details
                        </a>
                    </div>
                </div>
                @endforeach
            </div>
        @else
            <p class="text-muted text-center">No upcoming interviews scheduled.</p>
        @endif
    </div>
</div>

<!-- Interview Details Modal -->
<div class="modal fade" id="interviewModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Interview Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="interview-details">
                <!-- Interview details will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <a href="#" id="view-interview-btn" class="btn btn-primary">View Full Details</a>
            </div>
        </div>
    </div>
</div>
@endsection

@section('scripts')
<style>
.calendar-table {
    table-layout: fixed;
}

.calendar-table th,
.calendar-table td {
    width: 14.28%;
    height: 120px;
    vertical-align: top;
    padding: 8px;
}

.calendar-date {
    font-weight: bold;
    margin-bottom: 5px;
}

.calendar-interview {
    background: #f8f9fa;
    border-radius: 4px;
    padding: 2px 4px;
    margin-bottom: 2px;
    font-size: 0.75rem;
    cursor: pointer;
}

.calendar-interview.scheduled {
    background: #fff3cd;
    border-left: 3px solid #ffc107;
}

.calendar-interview.completed {
    background: #d1e7dd;
    border-left: 3px solid #198754;
}

.calendar-interview.cancelled {
    background: #f8d7da;
    border-left: 3px solid #dc3545;
}

.calendar-interview:hover {
    opacity: 0.8;
}

.other-month {
    color: #6c757d;
    background-color: #f8f9fa;
}

.today {
    background-color: #e3f2fd;
}
</style>

<script>
let currentDate = new Date();
let interviews = [];
try {
    @php
        $interviewsData = $interviews->map(function($interview) {
            return [
                'id' => $interview->id,
                'date' => $interview->interview_date ? $interview->interview_date->format('Y-m-d') : null,
                'time' => $interview->interview_time ? $interview->interview_time->format('H:i') : '00:00',
                'candidate' => $interview->user ? $interview->user->name : 'Unknown',
                'job' => $interview->job ? $interview->job->title : 'Unknown Job',
                'status' => $interview->status ?? 'scheduled',
                'type' => $interview->interview_type ?? 'online',
                'meeting_link' => $interview->meeting_link,
                'location' => $interview->location
            ];
        })->filter(function($interview) {
            return $interview['date'] !== null;
        });
    @endphp
    interviews = @json($interviewsData);
} catch (error) {
    console.error('Error loading interviews data:', error);
    interviews = [];
}

function generateCalendar(year, month) {
    const firstDay = new Date(year, month, 1);
    const lastDay = new Date(year, month + 1, 0);
    const startDate = new Date(firstDay);
    startDate.setDate(startDate.getDate() - firstDay.getDay());
    
    const calendarBody = document.getElementById('calendar-body');
    calendarBody.innerHTML = '';
    
    const monthNames = [
        'January', 'February', 'March', 'April', 'May', 'June',
        'July', 'August', 'September', 'October', 'November', 'December'
    ];
    
    document.getElementById('current-month').textContent = `${monthNames[month]} ${year}`;
    
    let currentWeekRow = null;
    
    for (let i = 0; i < 42; i++) {
        const cellDate = new Date(startDate);
        cellDate.setDate(startDate.getDate() + i);
        
        if (i % 7 === 0) {
            currentWeekRow = document.createElement('tr');
            calendarBody.appendChild(currentWeekRow);
        }
        
        const cell = document.createElement('td');
        const isCurrentMonth = cellDate.getMonth() === month;
        const isToday = cellDate.toDateString() === new Date().toDateString();
        
        if (!isCurrentMonth) {
            cell.classList.add('other-month');
        }
        
        if (isToday) {
            cell.classList.add('today');
        }
        
        const dateDiv = document.createElement('div');
        dateDiv.className = 'calendar-date';
        dateDiv.textContent = cellDate.getDate();
        cell.appendChild(dateDiv);
        
        // Add interviews for this date
        const dateStr = cellDate.toISOString().split('T')[0];
        const dayInterviews = interviews.filter(interview => interview.date === dateStr);
        
        dayInterviews.forEach(interview => {
            try {
                const interviewDiv = document.createElement('div');
                interviewDiv.className = `calendar-interview ${interview.status || 'scheduled'}`;
                interviewDiv.textContent = `${interview.time} - ${interview.candidate}`;
                interviewDiv.onclick = () => showInterviewDetails(interview);
                interviewDiv.style.cursor = 'pointer';
                cell.appendChild(interviewDiv);
            } catch (error) {
                console.error('Error adding interview to calendar:', error, interview);
            }
        });
        
        currentWeekRow.appendChild(cell);
    }
}

function changeMonth(delta) {
    currentDate.setMonth(currentDate.getMonth() + delta);
    generateCalendar(currentDate.getFullYear(), currentDate.getMonth());
}

function goToToday() {
    currentDate = new Date();
    generateCalendar(currentDate.getFullYear(), currentDate.getMonth());
}

function showInterviewDetails(interview) {
    const modal = new bootstrap.Modal(document.getElementById('interviewModal'));
    const detailsDiv = document.getElementById('interview-details');
    const viewBtn = document.getElementById('view-interview-btn');
    
    detailsDiv.innerHTML = `
        <div class="row">
            <div class="col-md-6">
                <strong>Candidate:</strong><br>
                ${interview.candidate}
            </div>
            <div class="col-md-6">
                <strong>Job:</strong><br>
                ${interview.job}
            </div>
        </div>
        <hr>
        <div class="row">
            <div class="col-md-6">
                <strong>Date:</strong><br>
                ${new Date(interview.date).toLocaleDateString()}
            </div>
            <div class="col-md-6">
                <strong>Time:</strong><br>
                ${interview.time}
            </div>
        </div>
        <hr>
        <div class="row">
            <div class="col-md-6">
                <strong>Type:</strong><br>
                ${interview.type.charAt(0).toUpperCase() + interview.type.slice(1)}
            </div>
            <div class="col-md-6">
                <strong>Status:</strong><br>
                <span class="badge bg-${interview.status === 'scheduled' ? 'warning' : (interview.status === 'completed' ? 'success' : 'danger')}">
                    ${interview.status.charAt(0).toUpperCase() + interview.status.slice(1)}
                </span>
            </div>
        </div>
        ${interview.meeting_link ? `<hr><strong>Meeting Link:</strong><br><a href="${interview.meeting_link}" target="_blank">${interview.meeting_link}</a>` : ''}
        ${interview.location ? `<hr><strong>Location:</strong><br>${interview.location}` : ''}
    `;
    
    viewBtn.href = `/recruiter/interviews/${interview.id}`;
    modal.show();
}

// Initialize calendar
document.addEventListener('DOMContentLoaded', function() {
    try {
        // Ensure interviews is an array
        if (!Array.isArray(interviews)) {
            interviews = [];
        }
        generateCalendar(currentDate.getFullYear(), currentDate.getMonth());
    } catch (error) {
        console.error('Error initializing calendar:', error);
        // Show error message to user
        document.getElementById('calendar-body').innerHTML = '<tr><td colspan="7" class="text-center text-danger">Error loading calendar. Please refresh the page.</td></tr>';
    }
});
</script>
@endsection
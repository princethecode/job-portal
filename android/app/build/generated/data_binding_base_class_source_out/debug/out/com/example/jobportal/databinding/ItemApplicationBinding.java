// Generated by view binder compiler. Do not edit!
package com.example.jobportal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.jobportal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemApplicationBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView applicationCompany;

  @NonNull
  public final TextView applicationJobTitle;

  @NonNull
  public final TextView appliedDate;

  @NonNull
  public final TextView status;

  private ItemApplicationBinding(@NonNull CardView rootView, @NonNull TextView applicationCompany,
      @NonNull TextView applicationJobTitle, @NonNull TextView appliedDate,
      @NonNull TextView status) {
    this.rootView = rootView;
    this.applicationCompany = applicationCompany;
    this.applicationJobTitle = applicationJobTitle;
    this.appliedDate = appliedDate;
    this.status = status;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemApplicationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemApplicationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_application, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemApplicationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.application_company;
      TextView applicationCompany = ViewBindings.findChildViewById(rootView, id);
      if (applicationCompany == null) {
        break missingId;
      }

      id = R.id.application_job_title;
      TextView applicationJobTitle = ViewBindings.findChildViewById(rootView, id);
      if (applicationJobTitle == null) {
        break missingId;
      }

      id = R.id.applied_date;
      TextView appliedDate = ViewBindings.findChildViewById(rootView, id);
      if (appliedDate == null) {
        break missingId;
      }

      id = R.id.status;
      TextView status = ViewBindings.findChildViewById(rootView, id);
      if (status == null) {
        break missingId;
      }

      return new ItemApplicationBinding((CardView) rootView, applicationCompany,
          applicationJobTitle, appliedDate, status);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

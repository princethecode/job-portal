// Generated by view binder compiler. Do not edit!
package com.example.jobportal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.jobportal.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChangePasswordBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button changePasswordButton;

  @NonNull
  public final TextInputEditText confirmPasswordInput;

  @NonNull
  public final TextInputLayout confirmPasswordLayout;

  @NonNull
  public final TextInputEditText currentPasswordInput;

  @NonNull
  public final TextInputLayout currentPasswordLayout;

  @NonNull
  public final TextInputEditText newPasswordInput;

  @NonNull
  public final TextInputLayout newPasswordLayout;

  @NonNull
  public final TextView passwordRequirementsText;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView titleText;

  private ActivityChangePasswordBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button changePasswordButton, @NonNull TextInputEditText confirmPasswordInput,
      @NonNull TextInputLayout confirmPasswordLayout,
      @NonNull TextInputEditText currentPasswordInput,
      @NonNull TextInputLayout currentPasswordLayout, @NonNull TextInputEditText newPasswordInput,
      @NonNull TextInputLayout newPasswordLayout, @NonNull TextView passwordRequirementsText,
      @NonNull ProgressBar progressBar, @NonNull TextView titleText) {
    this.rootView = rootView;
    this.changePasswordButton = changePasswordButton;
    this.confirmPasswordInput = confirmPasswordInput;
    this.confirmPasswordLayout = confirmPasswordLayout;
    this.currentPasswordInput = currentPasswordInput;
    this.currentPasswordLayout = currentPasswordLayout;
    this.newPasswordInput = newPasswordInput;
    this.newPasswordLayout = newPasswordLayout;
    this.passwordRequirementsText = passwordRequirementsText;
    this.progressBar = progressBar;
    this.titleText = titleText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChangePasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChangePasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_change_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChangePasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.changePasswordButton;
      Button changePasswordButton = ViewBindings.findChildViewById(rootView, id);
      if (changePasswordButton == null) {
        break missingId;
      }

      id = R.id.confirmPasswordInput;
      TextInputEditText confirmPasswordInput = ViewBindings.findChildViewById(rootView, id);
      if (confirmPasswordInput == null) {
        break missingId;
      }

      id = R.id.confirmPasswordLayout;
      TextInputLayout confirmPasswordLayout = ViewBindings.findChildViewById(rootView, id);
      if (confirmPasswordLayout == null) {
        break missingId;
      }

      id = R.id.currentPasswordInput;
      TextInputEditText currentPasswordInput = ViewBindings.findChildViewById(rootView, id);
      if (currentPasswordInput == null) {
        break missingId;
      }

      id = R.id.currentPasswordLayout;
      TextInputLayout currentPasswordLayout = ViewBindings.findChildViewById(rootView, id);
      if (currentPasswordLayout == null) {
        break missingId;
      }

      id = R.id.newPasswordInput;
      TextInputEditText newPasswordInput = ViewBindings.findChildViewById(rootView, id);
      if (newPasswordInput == null) {
        break missingId;
      }

      id = R.id.newPasswordLayout;
      TextInputLayout newPasswordLayout = ViewBindings.findChildViewById(rootView, id);
      if (newPasswordLayout == null) {
        break missingId;
      }

      id = R.id.passwordRequirementsText;
      TextView passwordRequirementsText = ViewBindings.findChildViewById(rootView, id);
      if (passwordRequirementsText == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      return new ActivityChangePasswordBinding((ConstraintLayout) rootView, changePasswordButton,
          confirmPasswordInput, confirmPasswordLayout, currentPasswordInput, currentPasswordLayout,
          newPasswordInput, newPasswordLayout, passwordRequirementsText, progressBar, titleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
